package com.hust.htd.persistence.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CommentExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table comment
     *
     * @mbggenerated Sun Oct 25 18:48:50 ICT 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table comment
     *
     * @mbggenerated Sun Oct 25 18:48:50 ICT 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table comment
     *
     * @mbggenerated Sun Oct 25 18:48:50 ICT 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Sun Oct 25 18:48:50 ICT 2015
     */
    public CommentExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Sun Oct 25 18:48:50 ICT 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Sun Oct 25 18:48:50 ICT 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Sun Oct 25 18:48:50 ICT 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Sun Oct 25 18:48:50 ICT 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Sun Oct 25 18:48:50 ICT 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Sun Oct 25 18:48:50 ICT 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Sun Oct 25 18:48:50 ICT 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Sun Oct 25 18:48:50 ICT 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Sun Oct 25 18:48:50 ICT 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Sun Oct 25 18:48:50 ICT 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table comment
     *
     * @mbggenerated Sun Oct 25 18:48:50 ICT 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCommentIdIsNull() {
            addCriterion("comment_id is null");
            return (Criteria) this;
        }

        public Criteria andCommentIdIsNotNull() {
            addCriterion("comment_id is not null");
            return (Criteria) this;
        }

        public Criteria andCommentIdEqualTo(Long value) {
            addCriterion("comment_id =", value, "commentId");
            return (Criteria) this;
        }

        public Criteria andCommentIdNotEqualTo(Long value) {
            addCriterion("comment_id <>", value, "commentId");
            return (Criteria) this;
        }

        public Criteria andCommentIdGreaterThan(Long value) {
            addCriterion("comment_id >", value, "commentId");
            return (Criteria) this;
        }

        public Criteria andCommentIdGreaterThanOrEqualTo(Long value) {
            addCriterion("comment_id >=", value, "commentId");
            return (Criteria) this;
        }

        public Criteria andCommentIdLessThan(Long value) {
            addCriterion("comment_id <", value, "commentId");
            return (Criteria) this;
        }

        public Criteria andCommentIdLessThanOrEqualTo(Long value) {
            addCriterion("comment_id <=", value, "commentId");
            return (Criteria) this;
        }

        public Criteria andCommentIdIn(List<Long> values) {
            addCriterion("comment_id in", values, "commentId");
            return (Criteria) this;
        }

        public Criteria andCommentIdNotIn(List<Long> values) {
            addCriterion("comment_id not in", values, "commentId");
            return (Criteria) this;
        }

        public Criteria andCommentIdBetween(Long value1, Long value2) {
            addCriterion("comment_id between", value1, value2, "commentId");
            return (Criteria) this;
        }

        public Criteria andCommentIdNotBetween(Long value1, Long value2) {
            addCriterion("comment_id not between", value1, value2, "commentId");
            return (Criteria) this;
        }

        public Criteria andCommentDatetimeIsNull() {
            addCriterion("comment_datetime is null");
            return (Criteria) this;
        }

        public Criteria andCommentDatetimeIsNotNull() {
            addCriterion("comment_datetime is not null");
            return (Criteria) this;
        }

        public Criteria andCommentDatetimeEqualTo(Date value) {
            addCriterion("comment_datetime =", value, "commentDatetime");
            return (Criteria) this;
        }

        public Criteria andCommentDatetimeNotEqualTo(Date value) {
            addCriterion("comment_datetime <>", value, "commentDatetime");
            return (Criteria) this;
        }

        public Criteria andCommentDatetimeGreaterThan(Date value) {
            addCriterion("comment_datetime >", value, "commentDatetime");
            return (Criteria) this;
        }

        public Criteria andCommentDatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("comment_datetime >=", value, "commentDatetime");
            return (Criteria) this;
        }

        public Criteria andCommentDatetimeLessThan(Date value) {
            addCriterion("comment_datetime <", value, "commentDatetime");
            return (Criteria) this;
        }

        public Criteria andCommentDatetimeLessThanOrEqualTo(Date value) {
            addCriterion("comment_datetime <=", value, "commentDatetime");
            return (Criteria) this;
        }

        public Criteria andCommentDatetimeIn(List<Date> values) {
            addCriterion("comment_datetime in", values, "commentDatetime");
            return (Criteria) this;
        }

        public Criteria andCommentDatetimeNotIn(List<Date> values) {
            addCriterion("comment_datetime not in", values, "commentDatetime");
            return (Criteria) this;
        }

        public Criteria andCommentDatetimeBetween(Date value1, Date value2) {
            addCriterion("comment_datetime between", value1, value2, "commentDatetime");
            return (Criteria) this;
        }

        public Criteria andCommentDatetimeNotBetween(Date value1, Date value2) {
            addCriterion("comment_datetime not between", value1, value2, "commentDatetime");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Long value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Long value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Long value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Long value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Long value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Long> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Long> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Long value1, Long value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Long value1, Long value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andAnonymousIdIsNull() {
            addCriterion("anonymous_id is null");
            return (Criteria) this;
        }

        public Criteria andAnonymousIdIsNotNull() {
            addCriterion("anonymous_id is not null");
            return (Criteria) this;
        }

        public Criteria andAnonymousIdEqualTo(Long value) {
            addCriterion("anonymous_id =", value, "anonymousId");
            return (Criteria) this;
        }

        public Criteria andAnonymousIdNotEqualTo(Long value) {
            addCriterion("anonymous_id <>", value, "anonymousId");
            return (Criteria) this;
        }

        public Criteria andAnonymousIdGreaterThan(Long value) {
            addCriterion("anonymous_id >", value, "anonymousId");
            return (Criteria) this;
        }

        public Criteria andAnonymousIdGreaterThanOrEqualTo(Long value) {
            addCriterion("anonymous_id >=", value, "anonymousId");
            return (Criteria) this;
        }

        public Criteria andAnonymousIdLessThan(Long value) {
            addCriterion("anonymous_id <", value, "anonymousId");
            return (Criteria) this;
        }

        public Criteria andAnonymousIdLessThanOrEqualTo(Long value) {
            addCriterion("anonymous_id <=", value, "anonymousId");
            return (Criteria) this;
        }

        public Criteria andAnonymousIdIn(List<Long> values) {
            addCriterion("anonymous_id in", values, "anonymousId");
            return (Criteria) this;
        }

        public Criteria andAnonymousIdNotIn(List<Long> values) {
            addCriterion("anonymous_id not in", values, "anonymousId");
            return (Criteria) this;
        }

        public Criteria andAnonymousIdBetween(Long value1, Long value2) {
            addCriterion("anonymous_id between", value1, value2, "anonymousId");
            return (Criteria) this;
        }

        public Criteria andAnonymousIdNotBetween(Long value1, Long value2) {
            addCriterion("anonymous_id not between", value1, value2, "anonymousId");
            return (Criteria) this;
        }

        public Criteria andProductIdIsNull() {
            addCriterion("product_id is null");
            return (Criteria) this;
        }

        public Criteria andProductIdIsNotNull() {
            addCriterion("product_id is not null");
            return (Criteria) this;
        }

        public Criteria andProductIdEqualTo(Long value) {
            addCriterion("product_id =", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdNotEqualTo(Long value) {
            addCriterion("product_id <>", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdGreaterThan(Long value) {
            addCriterion("product_id >", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdGreaterThanOrEqualTo(Long value) {
            addCriterion("product_id >=", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdLessThan(Long value) {
            addCriterion("product_id <", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdLessThanOrEqualTo(Long value) {
            addCriterion("product_id <=", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdIn(List<Long> values) {
            addCriterion("product_id in", values, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdNotIn(List<Long> values) {
            addCriterion("product_id not in", values, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdBetween(Long value1, Long value2) {
            addCriterion("product_id between", value1, value2, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdNotBetween(Long value1, Long value2) {
            addCriterion("product_id not between", value1, value2, "productId");
            return (Criteria) this;
        }

        public Criteria andCommentAuthorIsNull() {
            addCriterion("comment_author is null");
            return (Criteria) this;
        }

        public Criteria andCommentAuthorIsNotNull() {
            addCriterion("comment_author is not null");
            return (Criteria) this;
        }

        public Criteria andCommentAuthorEqualTo(String value) {
            addCriterion("comment_author =", value, "commentAuthor");
            return (Criteria) this;
        }

        public Criteria andCommentAuthorNotEqualTo(String value) {
            addCriterion("comment_author <>", value, "commentAuthor");
            return (Criteria) this;
        }

        public Criteria andCommentAuthorGreaterThan(String value) {
            addCriterion("comment_author >", value, "commentAuthor");
            return (Criteria) this;
        }

        public Criteria andCommentAuthorGreaterThanOrEqualTo(String value) {
            addCriterion("comment_author >=", value, "commentAuthor");
            return (Criteria) this;
        }

        public Criteria andCommentAuthorLessThan(String value) {
            addCriterion("comment_author <", value, "commentAuthor");
            return (Criteria) this;
        }

        public Criteria andCommentAuthorLessThanOrEqualTo(String value) {
            addCriterion("comment_author <=", value, "commentAuthor");
            return (Criteria) this;
        }

        public Criteria andCommentAuthorLike(String value) {
            addCriterion("comment_author like", value, "commentAuthor");
            return (Criteria) this;
        }

        public Criteria andCommentAuthorNotLike(String value) {
            addCriterion("comment_author not like", value, "commentAuthor");
            return (Criteria) this;
        }

        public Criteria andCommentAuthorIn(List<String> values) {
            addCriterion("comment_author in", values, "commentAuthor");
            return (Criteria) this;
        }

        public Criteria andCommentAuthorNotIn(List<String> values) {
            addCriterion("comment_author not in", values, "commentAuthor");
            return (Criteria) this;
        }

        public Criteria andCommentAuthorBetween(String value1, String value2) {
            addCriterion("comment_author between", value1, value2, "commentAuthor");
            return (Criteria) this;
        }

        public Criteria andCommentAuthorNotBetween(String value1, String value2) {
            addCriterion("comment_author not between", value1, value2, "commentAuthor");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table comment
     *
     * @mbggenerated do_not_delete_during_merge Sun Oct 25 18:48:50 ICT 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table comment
     *
     * @mbggenerated Sun Oct 25 18:48:50 ICT 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}